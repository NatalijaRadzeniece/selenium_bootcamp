//after public we specified that we want to return our Object model (in this case Article.java)
public Article getArticleTitleAndComment(Integer i){
    // Article - model Objects, and here we creating a copy of it, in order to use.
    Article commentCount = new Article();
    //This line we selecting specific Article from Delfi Home Page to work with it.
    // get(i) - getting from list by index specific entry ( in our case it Article).
    WebElement article = articlesFull.get(i);
    //Setting title name in Object model - method "setTitle()"
    //in set () we first looking for WebElement title ( locator "h1") and getting text from it.
    String title = article.findElement(By.tagName("h1")).getText();
    commentCount.setTitle(title);
    //We checking is comment number presented at the page.
    // List will not throw error in case if inside Article element does not exist comment element.
    List<WebElement> commentElements = article.findElements(By.xpath(".//a[contains(@class,'comment-count')]"));
    // is List of comment element is Empty or not.
    // if it is empty IF loop will execute line with   "commentCount.setCommentNumber(0);"
    if(commentElements.isEmpty()){
        // if condition is TRUE, this code will be executed.
        //letting know to our Object that comment amount is 0.
        commentCount.setCommentNumber(0);
    }
    // if it meets FALSE - started to work else code.
    else {
        //in case of FALSE of IF condition, this part will be executed.
        //This line we need to use our Comment Element (if its exist)
        WebElement comment = commentElements.get(0);
        //Getting text number from Comment Element, to set it in Object model ( Article)
        String commentNumberText = comment.getText();
        //  commentCount - still name of our Object model, that we declared above ( Article commentCount = new Article();)
        //setCommentNumber - functions which set our result in Object model (Article)
        commentCount.setCommentNumber(commentNumberText);
    }
    article.click();

    //returning our Object model ( Article.java) in order to use in Test class.
    return commentCount;
}
//________________________________________________________
DelfiHomePage homePage = new DelfiHomePage(driver);
// Copy of our object model - Article.java
//That in Test class created Object model is actually one from Page class ( DelfiHomePage.class)
Article articleHome = homePage.getArticleTitleAndComment(4);
DelfiArticlePage delfiArticlePage = new DelfiArticlePage(driver);
Article articleArticle =  delfiArticlePage.getArticleAttributes();
Assertions.assertEquals(articleHome.getTitle(), articleArticle.getTitle(), "Articles not the same");
Assertions.assertEquals(articleHome.getCommentNumber(), articleArticle.getCommentNumber(), "Amount of comments not the same"